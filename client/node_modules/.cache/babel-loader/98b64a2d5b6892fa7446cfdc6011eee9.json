{"ast":null,"code":"var _jsxFileName = \"/Users/Kawika 1/code/white-bear-fullstack/client/src/components/ui/Login.js\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport hash from \"object-hash\";\nimport { v4 as getUuid } from \"uuid\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport actions from \"../../store/actions\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDisplayingInputs: true,\n      emailError: \"\",\n      passwordError: \"\",\n      hasEmailError: false,\n      hasPasswordError: false\n    };\n  }\n\n  ShowInputs() {\n    this.setState({\n      isDisplayingInputs: true\n    });\n  }\n\n  async setEmailState(emailInput) {\n    const lowerCasedEmailInput = emailInput.toLowerCase();\n    console.log(lowerCasedEmailInput); // eslint-disable-next-line\n\n    const emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    if (emailInput === \"\") this.setState({\n      emailError: \"Please enter your email address.\",\n      hasEmailError: true\n    });else if (emailRegex.test(lowerCasedEmailInput) === false) {\n      console.log(\"Not a valid EMAIl\");\n      this.setState({\n        emailError: \"Please enter a valid email address.\",\n        hasEmailError: true\n      });\n    } else {\n      this.setState({\n        emailError: \"\",\n        hasEmailError: false\n      });\n    }\n  }\n\n  checkHasLocalPart(passwordInput, emailInput) {\n    const localPart = emailInput.split(\"@\")[0];\n    if (localPart === \"\") return false;else if (localPart.length < 4) return false;else return passwordInput.includes(localPart);\n  }\n\n  async setPasswordState(passwordInput) {\n    console.log(passwordInput);\n    if (passwordInput === \"\") this.setState({\n      passwordError: \"Please enter your password.\",\n      hasPasswordError: true\n    });else {\n      this.setState({\n        passwordError: \"\",\n        hasPasswordError: false\n      });\n    }\n  }\n\n  async validateAndCreateUser() {\n    //   console.log(\"VALIDATE ME\");\n    const emailInput = document.getElementById(\"login-email-input\").value; //   console.log(emailInput);\n\n    const passwordInput = document.getElementById(\"login-password-input\").value;\n    await this.setEmailState(emailInput);\n    await this.setPasswordState(passwordInput, emailInput);\n\n    if (this.state.hasEmailError === false && this.state.hasPasswordError === false) {\n      const user = {\n        id: getUuid(),\n        email: emailInput,\n        password: hash(passwordInput),\n        createdAt: Date.now()\n      };\n      console.log(\"Created user object for POST: \", user); // Mimic API Presponse:\n\n      axios.get(\"https://raw.githubusercontent.com/kawikarob/white-bear-mpa/master/src/mock-data/user.json\").then(res => {\n        // handle success\n        const currentUser = res.data;\n        console.log(currentUser);\n        this.props.dispatch({\n          type: actions.UPDATE_CURRENT_USER,\n          payload: res.data\n        });\n      }).catch(error => {\n        // handle error\n        console.log(error);\n      }); // redirect the user\n\n      this.props.history.push(\"/create-answer\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-5 offset-xl-1 col-lg-5 col-md-5 col-sm-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card landing-padding \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"landing-card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"card-title mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 19\n      }\n    }, \"Welcome back\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 19\n      }\n    }, \"Log in with your email address and password.\"), this.state.isDisplayingInputs && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-muted\",\n      htmlFor: \"existingEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 28\n      }\n    }, \"Email address\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      className: classnames({\n        \"form-control\": true,\n        \"is-invalid\": this.state.hasEmailError\n      }),\n      id: \"login-email-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 28\n      }\n    }), this.state.hasEmailError && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 31\n      }\n    }, this.state.emailError)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-muted\",\n      htmlFor: \"login-password-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 28\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      className: classnames({\n        \"form-control\": true,\n        \"is-invalid\": this.state.hasPasswordError\n      }),\n      id: \"login-password-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 28\n      }\n    }), this.state.hasPasswordError && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 31\n      }\n    }, this.state.passwordError), /*#__PURE__*/React.createElement(\"button\", {\n      to: \"create-answer\",\n      className: \"btn btn-success bt-lg float-right mt-4\",\n      onClick: () => {\n        this.validateAndCreateUser();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 28\n      }\n    }, \"Log in\"))))));\n  }\n\n} // global state //\n\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nexport default withRouter(connect(mapStateToProps)(Login));","map":{"version":3,"sources":["/Users/Kawika 1/code/white-bear-fullstack/client/src/components/ui/Login.js"],"names":["React","withRouter","classnames","hash","v4","getUuid","axios","connect","actions","Login","Component","constructor","props","state","isDisplayingInputs","emailError","passwordError","hasEmailError","hasPasswordError","ShowInputs","setState","setEmailState","emailInput","lowerCasedEmailInput","toLowerCase","console","log","emailRegex","test","checkHasLocalPart","passwordInput","localPart","split","length","includes","setPasswordState","validateAndCreateUser","document","getElementById","value","user","id","email","password","createdAt","Date","now","get","then","res","currentUser","data","dispatch","type","UPDATE_CURRENT_USER","payload","catch","error","history","push","render","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport hash from \"object-hash\";\nimport { v4 as getUuid } from \"uuid\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport actions from \"../../store/actions\";\n\nclass Login extends React.Component {\n   constructor(props) {\n      super(props);\n\n      this.state = {\n         isDisplayingInputs: true,\n         emailError: \"\",\n         passwordError: \"\",\n         hasEmailError: false,\n         hasPasswordError: false,\n      };\n   }\n\n   ShowInputs() {\n      this.setState({\n         isDisplayingInputs: true,\n      });\n   }\n\n   async setEmailState(emailInput) {\n      const lowerCasedEmailInput = emailInput.toLowerCase();\n      console.log(lowerCasedEmailInput);\n      // eslint-disable-next-line\n      const emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      if (emailInput === \"\")\n         this.setState({\n            emailError: \"Please enter your email address.\",\n            hasEmailError: true,\n         });\n      else if (emailRegex.test(lowerCasedEmailInput) === false) {\n         console.log(\"Not a valid EMAIl\");\n         this.setState({\n            emailError: \"Please enter a valid email address.\",\n            hasEmailError: true,\n         });\n      } else {\n         this.setState({ emailError: \"\", hasEmailError: false });\n      }\n   }\n   checkHasLocalPart(passwordInput, emailInput) {\n      const localPart = emailInput.split(\"@\")[0];\n      if (localPart === \"\") return false;\n      else if (localPart.length < 4) return false;\n      else return passwordInput.includes(localPart);\n   }\n\n   async setPasswordState(passwordInput) {\n      console.log(passwordInput);\n\n      if (passwordInput === \"\")\n         this.setState({\n            passwordError: \"Please enter your password.\",\n            hasPasswordError: true,\n         });\n      else {\n         this.setState({ passwordError: \"\", hasPasswordError: false });\n      }\n   }\n\n   async validateAndCreateUser() {\n      //   console.log(\"VALIDATE ME\");\n      const emailInput = document.getElementById(\"login-email-input\").value;\n      //   console.log(emailInput);\n      const passwordInput = document.getElementById(\"login-password-input\")\n         .value;\n      await this.setEmailState(emailInput);\n      await this.setPasswordState(passwordInput, emailInput);\n      if (\n         this.state.hasEmailError === false &&\n         this.state.hasPasswordError === false\n      ) {\n         const user = {\n            id: getUuid(),\n            email: emailInput,\n            password: hash(passwordInput),\n            createdAt: Date.now(),\n         };\n         console.log(\"Created user object for POST: \", user);\n         // Mimic API Presponse:\n         axios\n            .get(\n               \"https://raw.githubusercontent.com/kawikarob/white-bear-mpa/master/src/mock-data/user.json\"\n            )\n            .then((res) => {\n               // handle success\n               const currentUser = res.data;\n               console.log(currentUser);\n               this.props.dispatch({\n                  type: actions.UPDATE_CURRENT_USER,\n                  payload: res.data,\n               });\n            })\n            .catch((error) => {\n               // handle error\n               console.log(error);\n            });\n         // redirect the user\n         this.props.history.push(\"/create-answer\");\n      }\n   }\n\n   render() {\n      return (\n         <div className=\"col-xl-5 offset-xl-1 col-lg-5 col-md-5 col-sm-6\">\n            <div className=\"card landing-padding \">\n               <div className=\"landing-card-text\">\n                  <h2 className=\"card-title mb-4\">Welcome back</h2>\n                  <p className=\"mb-4\">\n                     Log in with your email address and password.\n                  </p>\n                  {this.state.isDisplayingInputs && (\n                     <div>\n                        <div className=\"form-group\">\n                           <label\n                              className=\"text-muted\"\n                              htmlFor=\"existingEmail\"\n                           >\n                              Email address\n                           </label>\n                           <input\n                              type=\"email\"\n                              className={classnames({\n                                 \"form-control\": true,\n                                 \"is-invalid\": this.state.hasEmailError,\n                              })}\n                              id=\"login-email-input\"\n                           />\n                           {this.state.hasEmailError && (\n                              <div className=\"text-danger\">\n                                 {this.state.emailError}\n                              </div>\n                           )}\n                        </div>\n                        <div className=\"form-group mb-4\">\n                           <label\n                              className=\"text-muted\"\n                              htmlFor=\"login-password-input\"\n                           >\n                              Password\n                           </label>\n                           <input\n                              type=\"password\"\n                              className={classnames({\n                                 \"form-control\": true,\n                                 \"is-invalid\": this.state.hasPasswordError,\n                              })}\n                              id=\"login-password-input\"\n                           />\n                           {this.state.hasPasswordError && (\n                              <div className=\"text-danger\">\n                                 {this.state.passwordError}\n                              </div>\n                           )}\n\n                           <button\n                              to=\"create-answer\"\n                              className=\"btn btn-success bt-lg float-right mt-4\"\n                              onClick={() => {\n                                 this.validateAndCreateUser();\n                              }}\n                           >\n                              Log in\n                           </button>\n                        </div>\n                     </div>\n                  )}\n               </div>\n            </div>\n         </div>\n      );\n   }\n}\n\n// global state //\nfunction mapStateToProps(state) {\n   return {};\n}\n\nexport default withRouter(connect(mapStateToProps)(Login));\n"]},"metadata":{},"sourceType":"module"}