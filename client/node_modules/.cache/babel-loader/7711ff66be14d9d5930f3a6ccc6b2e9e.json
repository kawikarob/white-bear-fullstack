{"ast":null,"code":"var _jsxFileName = \"/Users/Kawika 1/code/white-bear-fullstack/client/src/components/pages/Edit.js\";\nimport React from \"react\";\nimport Header from \"../ui/Header\";\nimport Navigation from \"../ui/Navigation\";\nimport AppTemplate from \"../ui/AppTemplate\";\nimport saveIcon from \"../../icons/save.svg\";\nimport { Link } from \"react-router-dom\";\nimport memoryCards from \"../../mock-data/memory-cards\";\nimport toDisplayDate from \"date-fns/format\";\nimport classnames from \"classnames\";\nimport { checkIsOver, MAX_CARD_CHARS } from \"../../utils/helpers\";\nimport { connect } from \"react-redux\";\nimport actions from \"../../store/actions\";\nimport isEmpty from \"lodash/isEmpty\";\nimport without from \"lodash/without\";\nconst memoryCard = memoryCards[0];\n\nclass Edit extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(\"In the Edit component\");\n    this.state = {\n      answerText: memoryCard.answer,\n      imageryText: memoryCard.imagery,\n      isDeleteChecked: false\n    };\n  }\n\n  checkHasInvalidCharCount() {\n    if (this.state.imageryText.length > MAX_CARD_CHARS || this.state.imageryText.length === 0 || this.state.imageryText > MAX_CARD_CHARS || this.state.imageryText.length === 0) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  setImageryText(e) {\n    console.log(e.target, e.target.value);\n    this.setState({\n      imageryText: e.target.value\n    });\n  }\n\n  setAnswerText(e) {\n    console.log(e.target, e.target.value);\n    this.setState({\n      answerText: e.target.value\n    });\n  }\n\n  setDeleteButtonShown() {\n    this.setState({\n      isDeleteChecked: !this.state.isDeleteChecked\n    });\n  }\n\n  deleteCard() {\n    // TODO: delete from database\n    if (this.props.editableCard.prevRoute === \"/review-answer\") {\n      this.deleteCardFromStore();\n    }\n\n    if (this.props.editableCard.prevRoute === \"/all-cards\") {\n      this.props.history.push(\"/all-cards\");\n    }\n  }\n\n  deleteCardFromStore() {\n    const deletedCard = this.props.editableCard.card;\n    const cards = this.props.queue.cards;\n    const filteredCards = without(cards, deletedCard);\n    console.log(filteredCards);\n    this.props.dispatch({\n      type: actions.STORE_QUEUED_CARDS,\n      payload: filteredCards\n    });\n\n    if (filteredCards[this.props.queue.index] === undefined) {\n      this.props.history.push(\"/review-empty\");\n    } else {\n      this.props.history.push(\"/review-imagery\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(AppTemplate, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Navigation, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"my-4 text-center text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, \"Edit card\"), isEmpty(this.props.editableCard) === false && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card bg-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      rows: \"4\" // className=\"d-none d-sm-block\"\n      ,\n      defaultValue: this.props.editableCard.card.imagery,\n      onChange: e => this.setImageryText(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 28\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card bg-secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      rows: \"4\",\n      defaultValue: this.props.editableCard.card.answer,\n      onChange: e => this.setAnswerText(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 28\n      }\n    }))), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"float-right text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classnames({\n        \"text-danger\": checkIsOver(this.state.imageryText, MAX_CARD_CHARS)\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }\n    }, \"Top: \", this.state.imageryText.length, \"/\", MAX_CARD_CHARS, \" \"), \" \", \"\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"span\", {\n      className: classnames({\n        \"text-danger\": checkIsOver(this.state.answerText, MAX_CARD_CHARS)\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    }, \"Bottom:\", this.state.answerText.length, \"/\", MAX_CARD_CHARS)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"clearfix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 22\n      }\n    })), /*#__PURE__*/React.createElement(Link, {\n      to: this.props.editableCard.prevRoute,\n      className: \"btn btn-link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 19\n      }\n    }, \"Discard changes\"), /*#__PURE__*/React.createElement(Link, {\n      to: this.props.editableCard.prevRoute,\n      className: classnames(\"btn btn-primary btn-lg float-right mb-6\", {\n        disabled: this.checkHasInvalidCharCount()\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: saveIcon,\n      width: \"30px\",\n      style: {\n        marginBottom: \"2px\"\n      },\n      className: \"mr-1\",\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 22\n      }\n    }), \"Save\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"clearfix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"text-center text-muted mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 22\n      }\n    }, \"Card properties\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-muted mr-8 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 25\n      }\n    }, \"Created on:\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 25\n      }\n    }, \"Last attempt:\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 25\n      }\n    }, \"Next attempt:\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 25\n      }\n    }, \"Consecutives:\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 25\n      }\n    }, toDisplayDate(this.props.editableCard.card.createdAt, \"MMM. d, y\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 25\n      }\n    }, toDisplayDate(this.props.editableCard.card.lastAttemptAt, \"MMM. d, y\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 25\n      }\n    }, toDisplayDate(this.props.editableCard.card.nextAttemptAt, \"MMM. d, y\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 25\n      }\n    }, this.props.editableCard.card.totalSuccessfulAttempts)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row col-8 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"custom-control custom-checkbox text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"custom-control-input\",\n      onClick: () => {\n        this.setDeleteButtonShown();\n      },\n      id: \"delete-checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 28\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"custom-control-label\",\n      htmlFor: \"delete-checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 28\n      }\n    }, \"Show delete button\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row col mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 19\n      }\n    }, this.state.isDeleteChecked && /*#__PURE__*/React.createElement(\"button\", {\n      className: classnames(\"btn btn-large btn-outline-danger\"),\n      onClick: () => {\n        this.deleteCard();\n      } // id=\"delete-card\"\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 25\n      }\n    }, \"Delete this card\"))));\n  }\n\n} // global //\n\n\nfunction mapStateToProps(state) {\n  return {\n    editableCard: state.editableCard,\n    queue: state.queue\n  };\n}\n\nexport default connect(mapStateToProps)(Edit);","map":{"version":3,"sources":["/Users/Kawika 1/code/white-bear-fullstack/client/src/components/pages/Edit.js"],"names":["React","Header","Navigation","AppTemplate","Link","memoryCards","toDisplayDate","classnames","checkIsOver","MAX_CARD_CHARS","connect","actions","isEmpty","without","memoryCard","Edit","Component","constructor","props","console","log","state","answerText","answer","imageryText","imagery","isDeleteChecked","checkHasInvalidCharCount","length","setImageryText","e","target","value","setState","setAnswerText","setDeleteButtonShown","deleteCard","editableCard","prevRoute","deleteCardFromStore","history","push","deletedCard","card","cards","queue","filteredCards","dispatch","type","STORE_QUEUED_CARDS","payload","index","undefined","render","disabled","saveIcon","marginBottom","createdAt","lastAttemptAt","nextAttemptAt","totalSuccessfulAttempts","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Header from \"../ui/Header\";\nimport Navigation from \"../ui/Navigation\";\nimport AppTemplate from \"../ui/AppTemplate\";\nimport saveIcon from \"../../icons/save.svg\";\nimport { Link } from \"react-router-dom\";\nimport memoryCards from \"../../mock-data/memory-cards\";\nimport toDisplayDate from \"date-fns/format\";\nimport classnames from \"classnames\";\nimport { checkIsOver, MAX_CARD_CHARS } from \"../../utils/helpers\";\nimport { connect } from \"react-redux\";\nimport actions from \"../../store/actions\";\nimport isEmpty from \"lodash/isEmpty\";\nimport without from \"lodash/without\";\n\nconst memoryCard = memoryCards[0];\n\nclass Edit extends React.Component {\n   constructor(props) {\n      super(props);\n      console.log(\"In the Edit component\");\n      this.state = {\n         answerText: memoryCard.answer,\n         imageryText: memoryCard.imagery,\n         isDeleteChecked: false,\n      };\n   }\n\n   checkHasInvalidCharCount() {\n      if (\n         this.state.imageryText.length > MAX_CARD_CHARS ||\n         this.state.imageryText.length === 0 ||\n         this.state.imageryText > MAX_CARD_CHARS ||\n         this.state.imageryText.length === 0\n      ) {\n         return true;\n      } else {\n         return false;\n      }\n   }\n\n   setImageryText(e) {\n      console.log(e.target, e.target.value);\n      this.setState({ imageryText: e.target.value });\n   }\n\n   setAnswerText(e) {\n      console.log(e.target, e.target.value);\n      this.setState({ answerText: e.target.value });\n   }\n\n   setDeleteButtonShown() {\n      this.setState({ isDeleteChecked: !this.state.isDeleteChecked });\n   }\n\n   deleteCard() {\n      // TODO: delete from database\n      if (this.props.editableCard.prevRoute === \"/review-answer\") {\n         this.deleteCardFromStore();\n      }\n      if (this.props.editableCard.prevRoute === \"/all-cards\") {\n         this.props.history.push(\"/all-cards\");\n      }\n   }\n\n   deleteCardFromStore() {\n      const deletedCard = this.props.editableCard.card;\n      const cards = this.props.queue.cards;\n      const filteredCards = without(cards, deletedCard);\n      console.log(filteredCards);\n      this.props.dispatch({\n         type: actions.STORE_QUEUED_CARDS,\n         payload: filteredCards,\n      });\n      if (filteredCards[this.props.queue.index] === undefined) {\n         this.props.history.push(\"/review-empty\");\n      } else {\n         this.props.history.push(\"/review-imagery\");\n      }\n   }\n\n   render() {\n      return (\n         <AppTemplate>\n            <Header />\n            <Navigation />\n\n            <h4 className=\"my-4 text-center text-muted\">Edit card</h4>\n\n            {isEmpty(this.props.editableCard) === false && (\n               <>\n                  <div className=\"mb-4\">\n                     <div className=\"card bg-primary\">\n                        <div className=\"card-body\">\n                           {/* <textarea\n                        rows=\"5\"\n                        className=\"d-sm-none\"\n                        defaultValue={memoryCard.imagery}\n                     ></textarea> */}\n                           <textarea\n                              rows=\"4\"\n                              // className=\"d-none d-sm-block\"\n                              defaultValue={\n                                 this.props.editableCard.card.imagery\n                              }\n                              onChange={(e) => this.setImageryText(e)}\n                           ></textarea>\n                        </div>\n                     </div>\n\n                     <div className=\"card bg-secondary\">\n                        <div className=\"card-body\">\n                           <textarea\n                              rows=\"4\"\n                              defaultValue={this.props.editableCard.card.answer}\n                              onChange={(e) => this.setAnswerText(e)}\n                           ></textarea>\n                        </div>\n                     </div>\n\n                     <p className=\"float-right text-muted\">\n                        <span\n                           className={classnames({\n                              \"text-danger\": checkIsOver(\n                                 this.state.imageryText,\n                                 MAX_CARD_CHARS\n                              ),\n                           })}\n                        >\n                           Top: {this.state.imageryText.length}/{MAX_CARD_CHARS}{\" \"}\n                        </span>{\" \"}\n                        &nbsp;&nbsp;\n                        <span\n                           className={classnames({\n                              \"text-danger\": checkIsOver(\n                                 this.state.answerText,\n                                 MAX_CARD_CHARS\n                              ),\n                           })}\n                        >\n                           Bottom:\n                           {this.state.answerText.length}/{MAX_CARD_CHARS}\n                        </span>\n                     </p>\n\n                     <div className=\"clearfix\"></div>\n                  </div>\n                  <Link\n                     to={this.props.editableCard.prevRoute}\n                     className=\"btn btn-link\"\n                  >\n                     Discard changes\n                  </Link>\n\n                  <Link\n                     to={this.props.editableCard.prevRoute}\n                     className={classnames(\n                        \"btn btn-primary btn-lg float-right mb-6\",\n                        { disabled: this.checkHasInvalidCharCount() }\n                     )}\n                  >\n                     <img\n                        src={saveIcon}\n                        width=\"30px\"\n                        style={{ marginBottom: \"2px\" }}\n                        className=\"mr-1\"\n                        alt=\"\"\n                     />\n                     Save\n                  </Link>\n\n                  <div className=\"clearfix\"></div>\n                  <div>\n                     <h4 className=\"text-center text-muted mb-4\">\n                        Card properties\n                     </h4>\n                  </div>\n                  <div className=\"row col-12\">\n                     <div className=\"text-muted mr-8 mb-4\">\n                        <p className=\"mb-2\">Created on:</p>\n                        <p className=\"mb-2\">Last attempt:</p>\n                        <p className=\"mb-2\">Next attempt:</p>\n                        <p className=\"mb-2\">Consecutives:</p>\n                     </div>\n                     <div>\n                        <p className=\"mb-2\">\n                           {toDisplayDate(\n                              this.props.editableCard.card.createdAt,\n                              \"MMM. d, y\"\n                           )}\n                        </p>\n                        <p className=\"mb-2\">\n                           {toDisplayDate(\n                              this.props.editableCard.card.lastAttemptAt,\n                              \"MMM. d, y\"\n                           )}\n                        </p>\n                        <p className=\"mb-2\">\n                           {toDisplayDate(\n                              this.props.editableCard.card.nextAttemptAt,\n                              \"MMM. d, y\"\n                           )}\n                        </p>\n                        <p className=\"mb-2\">\n                           {\n                              this.props.editableCard.card\n                                 .totalSuccessfulAttempts\n                           }\n                        </p>\n                     </div>\n\n                     <div className=\"row col-8 mb-4\">\n                        <div className=\"custom-control custom-checkbox text-muted\">\n                           <input\n                              type=\"checkbox\"\n                              className=\"custom-control-input\"\n                              onClick={() => {\n                                 this.setDeleteButtonShown();\n                              }}\n                              id=\"delete-checkbox\"\n                           />\n                           <label\n                              className=\"custom-control-label\"\n                              htmlFor=\"delete-checkbox\"\n                           >\n                              Show delete button\n                           </label>\n                        </div>\n                     </div>\n                  </div>\n                  <div className=\"row col mb-4\">\n                     {this.state.isDeleteChecked && (\n                        <button\n                           className={classnames(\n                              \"btn btn-large btn-outline-danger\"\n                           )}\n                           onClick={() => {\n                              this.deleteCard();\n                           }}\n                           // id=\"delete-card\"\n                        >\n                           Delete this card\n                        </button>\n                     )}\n                  </div>\n               </>\n            )}\n         </AppTemplate>\n      );\n   }\n}\n\n// global //\nfunction mapStateToProps(state) {\n   return {\n      editableCard: state.editableCard,\n      queue: state.queue,\n   };\n}\n\nexport default connect(mapStateToProps)(Edit);\n"]},"metadata":{},"sourceType":"module"}