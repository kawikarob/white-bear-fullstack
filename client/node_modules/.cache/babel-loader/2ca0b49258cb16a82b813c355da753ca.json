{"ast":null,"code":"import actions from \"../actions\";\nexport default function queue(queue = {}, action) {\n  let newQueue = { ...queue\n  };\n\n  switch (action.type) {\n    case actions.STORE_QUEUED_CARDS:\n      newQueue.cards = action.payload;\n      return newQueue;\n    // is a new state\n\n    case actions.INCREMENT_QUEUE_INDEX:\n      newQueue.index += 1;\n      return newQueue;\n    // is a new state\n\n    case actions.DECREMENT_QUEUE_INDEX:\n      newQueue.index -= 1;\n      return newQueue;\n    // is a new state\n\n    case actions.RESET_QUEUE:\n      newQueue.cards = [];\n      newQueue.index = 0;\n      return newQueue;\n\n    default:\n      return queue;\n  }\n}","map":{"version":3,"sources":["/Users/Kawika 1/code/white-bear-fullstack/client/src/store/reducers/queue.js"],"names":["actions","queue","action","newQueue","type","STORE_QUEUED_CARDS","cards","payload","INCREMENT_QUEUE_INDEX","index","DECREMENT_QUEUE_INDEX","RESET_QUEUE"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,YAApB;AAEA,eAAe,SAASC,KAAT,CAAeA,KAAK,GAAG,EAAvB,EAA2BC,MAA3B,EAAmC;AAC/C,MAAIC,QAAQ,GAAG,EAAE,GAAGF;AAAL,GAAf;;AACA,UAAQC,MAAM,CAACE,IAAf;AACG,SAAKJ,OAAO,CAACK,kBAAb;AACGF,MAAAA,QAAQ,CAACG,KAAT,GAAiBJ,MAAM,CAACK,OAAxB;AACA,aAAOJ,QAAP;AAAiB;;AACpB,SAAKH,OAAO,CAACQ,qBAAb;AACGL,MAAAA,QAAQ,CAACM,KAAT,IAAkB,CAAlB;AACA,aAAON,QAAP;AAAiB;;AACpB,SAAKH,OAAO,CAACU,qBAAb;AACGP,MAAAA,QAAQ,CAACM,KAAT,IAAkB,CAAlB;AACA,aAAON,QAAP;AAAiB;;AACpB,SAAKH,OAAO,CAACW,WAAb;AACGR,MAAAA,QAAQ,CAACG,KAAT,GAAiB,EAAjB;AACAH,MAAAA,QAAQ,CAACM,KAAT,GAAiB,CAAjB;AACA,aAAON,QAAP;;AACH;AACG,aAAOF,KAAP;AAfN;AAiBF","sourcesContent":["import actions from \"../actions\";\n\nexport default function queue(queue = {}, action) {\n   let newQueue = { ...queue };\n   switch (action.type) {\n      case actions.STORE_QUEUED_CARDS:\n         newQueue.cards = action.payload;\n         return newQueue; // is a new state\n      case actions.INCREMENT_QUEUE_INDEX:\n         newQueue.index += 1;\n         return newQueue; // is a new state\n      case actions.DECREMENT_QUEUE_INDEX:\n         newQueue.index -= 1;\n         return newQueue; // is a new state\n      case actions.RESET_QUEUE:\n         newQueue.cards = [];\n         newQueue.index = 0;\n         return newQueue;\n      default:\n         return queue;\n   }\n}\n"]},"metadata":{},"sourceType":"module"}